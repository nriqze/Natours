// content/popup
.popup {
    height: 100vh;
    width: 100%;
    position: fixed;
    top: 0;
    left: 0;
    background-color: rgba($color-black, .8);
    z-index: 800;
    transition: all .3s;

    // hide the popup
    opacity: 0;
    visibility: hidden;

    &__content {
        @include absCenter;

        width: 75%;
        background-color: $color-white;
        box-shadow: 0 2rem 4rem rgba($color-black, .2);
        border-radius: 3px;

        display: table; // The parent element have to be set to display table so that the children elements can set the display property to table-cell. The browser will give them automatically the same height.

        overflow: hidden; // To hide the image behind the container and actually see the round border.

        // scale down the content to scale up when the content opens. Zoom-in effect.
        opacity: 0; // initialy the popup's content isn't visible
        transform: translate(-50%, -50%) scale(.25); // We have to repeat the translate property that is in the mixin, so the scale works, because this transform overides the transform in the mixin.
        transition: all .3s; //animation
    }

    &__left {
        width: 33.33333%;
        // We want that this box have the same height as the right one. For that we simulate a teble
        display: table-cell;
    }

    &__right {
        width: 66.66667%;
        // We want that this box have the same height as the left one. For that we simulate a teble
        display: table-cell;
        vertical-align: middle; // We use this property on tables to align the element verticaly
        padding: 3rem 5rem;
    }

    &__img {
        display: block;
        width: 100%;
    }

    &__text {
        font-size: 1.4rem;
        margin-bottom: 4rem;

        -moz-column-count: 2;
        column-count: 2; // We specify the number of columns that we want and the text is set automaticaly.
        -moz-column-gap: 4rem;
        column-gap: 4rem; // default is 1em = font-size = 14px
        -moz-column-rule: 1px solid $color-grey-light-2;
        column-rule: 1px solid $color-grey-light-2;

        -moz-hyphens: auto;
        -ms-hyphens: auto;
        -webkit-hyphens: auto;
        hyphens: auto; // For this to work, the language has to be set in the head of the html doccument
    }

    // make the popup visible
    &:target {
        opacity: 1;
        visibility: visible;
    }

    // Style content (popup zoom-in) when the popup opens. The popup becomes a target and we style the child element.
    &:target &__content {
        opacity: 1;
        transform: translate(-50%, -50%) scale(1);
    }

    // close popup when hit button
    &__close {
        &:link,
        &:visited {
            color: $color-grey-dark;
            position: absolute;
            top: 2.5rem;
            right: 2.5rem;
            font-size: 3rem;
            text-decoration: none;
            display: inline-block;
            transition: all .2s;
            line-height: 1; // without this property we could not position the element correctly
        }

        &:hover {
            color: $color-primary;
        }
    }

    @include respond(tab-land) {
        &__content {
            display: block;
            position: relative;
        }

        &__left {
            width: 100%;
            display: table-row;
        }

        &__right {
            width: 100%;
            display: block;
        }

        &__img {
            width: 50%;
            float: left;
        }

        &__img::after {
            clear: both;
        }
    }

    @include respond(tab-port) {
        &__content {
            width: 85%;
            display: block;
        }
    }

    @include respond(phone) {
        &__content {
            width: 100%;
            display: block;
        }

        &__text {
            text-align: justify;

            -moz-column-count: 1;
            column-count: 1;
            -moz-column-gap: 0rem;
            column-gap: 0rem;
            -moz-column-rule: none;
            column-rule: none;
        }
    }
}